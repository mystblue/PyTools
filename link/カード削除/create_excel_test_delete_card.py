# -*- coding: utf-8 -*-

# エビデンスの画像をエクセル形式でまとめる

import openpyxl
from openpyxl import Workbook

service = ["Pay TG", "Smart TG", "Smart TG Lite"]

device = ["PC 連動", "スタンドアロン"]

read = ["磁気／IC", "マニュアル"]

pattern = [
	[
	  "\n　カードチェック時カード削除",
	  "機能テスト",
	  "",
	  "[カード登録：成功、カード削除：成功]\nカードチェックを行う",
	  "取引が正常に完了すること\nペイジェントオンラインでカードが削除されていることを確認する"
	],
	[
	  "\n　カードチェック時カード削除",
	  "エラーハンドリングテスト",
	  "カード削除時に GW エラーとなるようにソースコードを修正する",
	  "[カード登録：成功、カード削除：GW エラー]\nカードチェックを行う",
	  "取引が正常に完了すること\n決済 GW エラーメッセージ「カードID削除に失敗しました。ペイジェント管理画面にて顧客カードID「カードID」を削除してください。」が表示されること\nペイジェントオンラインで登録したクレジットカードが削除されていないことを確認する"
	],
	[
	  "\n　カードチェック時カード削除",
	  "エラーハンドリングテスト",
	  "カード削除時に間違った customer_card_id を指定するようにソースコードを修正する",
	  "[カード登録：成功、カード削除：ペイジェント側のエラー]\nカードチェックを行う",
	  "取引が正常に完了すること\n決済 GW エラーメッセージ「カードID削除に失敗しました。ペイジェント管理画面にて顧客カードID「カードID」を削除してください。」が表示されること\nペイジェントオンラインで登録したクレジットカードが削除されていないことを確認する"
	],
	[
	  "\n　カードチェック時カード削除",
	  "エラーハンドリングテスト",
	  "カード登録時に GW となるようにソースコードを修正する",
	  "[カード登録時：GW エラー]\nカードチェックを行う",
	  "取引が正常に完了せず、決済GWエラーコード「GWE24」、決済GWエラーメッセージ「ペイジェントへのリクエストで通信エラーになりました。正常に処理されたかペイジェントの管理画面で確認してください。」と表示されること"
	],
	[
	  "\n　カードチェック時カード削除",
	  "エラーハンドリングテスト",
	  "",
	  "[カード登録時：ペイジェントエラー]\nカード登録時に不正なカード番号（1111 1111 1111 1111）を入力して、ペイジェント側でエラーとなる",
	  "取引が正常に完了せず、ペイジェントのエラーコードが「2016」となり、エラーメッセージが表示されること"
	],
]

def do_loop(ws):
    num = 14

    for s in service:
        for dv in device:
            for r in read:
                for d in pattern:
                    if s == 'Pay TG' and dv == 'スタンドアロン':
                        continue
                    if s == 'Pay TG' and r == '磁気／IC':
                        continue
                    msg = s + "\n" + dv + "\n" + r
                    ws["C" + str(num)] = msg + d[0]   # テスト項目（評価内容）
                    ws["I" + str(num)] = "正常系"   # 分類
                    ws["K" + str(num)] = d[1]   # テスト観点種別
                    ws["N" + str(num)] = d[2]   # 事前条件
                    ws["V" + str(num)] = d[3]   # 操作および入力値
                    ws["AL" + str(num)] = d[4]   # 振る舞い
                    ws["BI" + str(num)] = "1"
                    num += 1

def report():
    wb = openpyxl.load_workbook("test.xlsx")
    ws = wb['カードチェック時カード削除']  # ワークシートを指定
    ws = wb.active  # アクティブなワークシートを選択
    
    do_loop(ws)

    wb.save('test.xlsx')

if __name__ == '__main__':
    report()
